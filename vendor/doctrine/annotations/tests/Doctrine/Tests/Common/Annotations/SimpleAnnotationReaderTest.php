<?php
 namespace Doctrine\Tests\Common\Annotations; use Doctrine\Common\Annotations\SimpleAnnotationReader; class SimpleAnnotationReaderTest extends AbstractReaderTest { public function testImportDetectsNotImportedAnnotation() { parent::testImportDetectsNotImportedAnnotation(); } public function testImportDetectsNonExistentAnnotation() { parent::testImportDetectsNonExistentAnnotation(); } public function testClassWithInvalidAnnotationTargetAtClassDocBlock() { parent::testClassWithInvalidAnnotationTargetAtClassDocBlock(); } public function testClassWithInvalidAnnotationTargetAtPropertyDocBlock() { parent::testClassWithInvalidAnnotationTargetAtPropertyDocBlock(); } public function testClassWithInvalidNestedAnnotationTargetAtPropertyDocBlock() { parent::testClassWithInvalidNestedAnnotationTargetAtPropertyDocBlock(); } public function testClassWithInvalidAnnotationTargetAtMethodDocBlock() { parent::testClassWithInvalidAnnotationTargetAtMethodDocBlock(); } public function testErrorWhenInvalidAnnotationIsUsed() { parent::testErrorWhenInvalidAnnotationIsUsed(); } public function testInvalidAnnotationUsageButIgnoredClass() { $reader = $this->getReader(); $ref = new \ReflectionClass(Fixtures\InvalidAnnotationUsageButIgnoredClass::class); $annots = $reader->getClassAnnotations($ref); self::assertCount(1, $annots); } public function testIncludeIgnoreAnnotation() { $this->markTestSkipped('The simplified annotation reader would always autoload annotations'); } public function testInvalidAnnotationButIgnored() { $reader = $this->getReader(); $class = new \ReflectionClass(Fixtures\ClassDDC1660::class); self::assertTrue(class_exists(Fixtures\Annotation\Version::class)); self::assertCount(1, $reader->getClassAnnotations($class)); self::assertCount(1, $reader->getMethodAnnotations($class->getMethod('bar'))); self::assertCount(1, $reader->getPropertyAnnotations($class->getProperty('foo'))); } protected function getReader() { $reader = new SimpleAnnotationReader(); $reader->addNamespace(__NAMESPACE__); $reader->addNamespace(__NAMESPACE__ . '\Fixtures'); $reader->addNamespace(__NAMESPACE__ . '\Fixtures\Annotation'); return $reader; } }
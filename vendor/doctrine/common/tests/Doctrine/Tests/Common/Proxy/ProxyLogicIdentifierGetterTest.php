<?php
 namespace Doctrine\Tests\Common\Proxy; use Doctrine\Common\Persistence\Mapping\ClassMetadata; use Doctrine\Common\Proxy\ProxyGenerator; use PHPUnit_Framework_TestCase; use stdClass; class ProxyLogicIdentifierGetterTest extends PHPUnit_Framework_TestCase { public function testNoLazyLoadingForIdentifier(ClassMetadata $metadata, $fieldName, $expectedReturnedValue) { $className = $metadata->getName(); $proxyClassName = 'Doctrine\Tests\Common\ProxyProxy\__CG__\\' . $className; $proxyGenerator = new ProxyGenerator(__DIR__ . '/generated', __NAMESPACE__ . 'Proxy', true); $proxyFileName = $proxyGenerator->getProxyFileName($className); if (! class_exists($proxyClassName, false)) { $proxyGenerator->generateProxyClass($metadata, $proxyFileName); require_once $proxyFileName; } $proxy = new $proxyClassName( function () { self::fail('Initialization is never supposed to happen'); }, function () { self::fail('Initialization is never supposed to happen'); } ); $reflection = $metadata->getReflectionClass()->getProperty($fieldName); $reflection->setAccessible(true); $reflection->setValue($proxy, $expectedReturnedValue); $this->assertSame($expectedReturnedValue, $proxy->{'get' . $fieldName}()); } public function methodsForWhichLazyLoadingShouldBeDisabled() { $methods = [ [new LazyLoadableObjectClassMetadata(), 'protectedIdentifierField', 'foo'], ]; if (! class_exists(\ReflectionType::class, false)) { return $methods; } $methods = array_merge( $methods, [ [new LazyLoadableObjectWithTypehintsClassMetadata(), 'identifierFieldNoReturnTypehint', 'noTypeHint'], [new LazyLoadableObjectWithTypehintsClassMetadata(), 'identifierFieldReturnTypehintScalar', 'scalarValue'], [new LazyLoadableObjectWithTypehintsClassMetadata(), 'identifierFieldReturnClassFullyQualified', new LazyLoadableObjectWithTypehints()], [new LazyLoadableObjectWithTypehintsClassMetadata(), 'identifierFieldReturnClassPartialUse', new LazyLoadableObjectWithTypehints()], [new LazyLoadableObjectWithTypehintsClassMetadata(), 'identifierFieldReturnClassFullUse', new LazyLoadableObjectWithTypehints()], [new LazyLoadableObjectWithTypehintsClassMetadata(), 'identifierFieldReturnClassOneWord', new stdClass()], [new LazyLoadableObjectWithTypehintsClassMetadata(), 'identifierFieldReturnClassOneLetter', new stdClass()], ] ); if (PHP_VERSION_ID < 70100) { return $methods; } return array_merge( $methods, [ [new LazyLoadableObjectWithNullableTypehintsClassMetadata(), 'identifierFieldReturnClassOneLetterNullable', new stdClass()], [new LazyLoadableObjectWithNullableTypehintsClassMetadata(), 'identifierFieldReturnClassOneLetterNullableWithSpace', new stdClass()], ] ); } } 
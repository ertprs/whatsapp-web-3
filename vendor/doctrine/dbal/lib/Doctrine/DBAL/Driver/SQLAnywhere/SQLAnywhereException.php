<?php
 namespace Doctrine\DBAL\Driver\SQLAnywhere; use Doctrine\DBAL\Driver\AbstractDriverException; class SQLAnywhereException extends AbstractDriverException { public static function fromSQLAnywhereError($conn = null, $stmt = null) { if (null !== $conn && ! (is_resource($conn))) { throw new \InvalidArgumentException('Invalid SQL Anywhere connection resource given: ' . $conn); } if (null !== $stmt && ! (is_resource($stmt))) { throw new \InvalidArgumentException('Invalid SQL Anywhere statement resource given: ' . $stmt); } $state = $conn ? sasql_sqlstate($conn) : sasql_sqlstate(); $code = null; $message = null; if ($stmt) { $code = sasql_stmt_errno($stmt); $message = sasql_stmt_error($stmt); } if ($conn && ! $code) { $code = sasql_errorcode($conn); $message = sasql_error($conn); } if ( ! $conn || ! $code) { $code = sasql_errorcode(); $message = sasql_error(); } if ($message) { return new self('SQLSTATE [' . $state . '] [' . $code . '] ' . $message, $state, $code); } return new self('SQL Anywhere error occurred but no error message was retrieved from driver.', $state, $code); } } 
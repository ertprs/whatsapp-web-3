<?php
 namespace Doctrine\Tests\DBAL; require_once __DIR__ . '/../../../TestInit.php'; class OCI8StatementTest extends \Doctrine\Tests\DbalTestCase { public function setUp() { if (!extension_loaded('oci8')) { $this->markTestSkipped('oci8 is not installed.'); } parent::setUp(); } public function testExecute(array $params) { $statement = $this->getMock('\Doctrine\DBAL\Driver\OCI8\OCI8Statement', array('bindValue', 'errorInfo'), array(), '', false); $statement->expects($this->at(0)) ->method('bindValue') ->with( $this->equalTo(1), $this->equalTo($params[0]) ); $statement->expects($this->at(1)) ->method('bindValue') ->with( $this->equalTo(2), $this->equalTo($params[1]) ); $statement->expects($this->at(2)) ->method('bindValue') ->with( $this->equalTo(3), $this->equalTo($params[2]) ); $conn = $this->getMock('\Doctrine\DBAL\Driver\OCI8\OCI8Connection', array('getExecuteMode'), array(), '', false); $conn->expects($this->once()) ->method('getExecuteMode'); $reflProperty = new \ReflectionProperty($statement, '_conn'); $reflProperty->setAccessible(true); $reflProperty->setValue($statement, $conn); $statement->execute($params); } public static function executeDataProvider() { return array( array( array(0 => 'test', 1 => null, 2 => 'value') ), array( array(0 => null, 1 => 'test', 2 => 'value') ) ); } } 
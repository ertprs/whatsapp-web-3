<?php
 namespace Symfony\Component\Security\Core\Authentication\Token; use Symfony\Component\Security\Core\User\UserInterface; class RememberMeToken extends AbstractToken { private $secret; private $providerKey; public function __construct(UserInterface $user, $providerKey, $secret) { parent::__construct($user->getRoles()); if (empty($secret)) { throw new \InvalidArgumentException('$secret must not be empty.'); } if (empty($providerKey)) { throw new \InvalidArgumentException('$providerKey must not be empty.'); } $this->providerKey = $providerKey; $this->secret = $secret; $this->setUser($user); parent::setAuthenticated(true); } public function setAuthenticated($authenticated) { if ($authenticated) { throw new \LogicException('You cannot set this token to authenticated after creation.'); } parent::setAuthenticated(false); } public function getProviderKey() { return $this->providerKey; } public function getSecret() { return $this->secret; } public function getCredentials() { return ''; } public function serialize() { return serialize(array( $this->secret, $this->providerKey, parent::serialize(), )); } public function unserialize($serialized) { list($this->secret, $this->providerKey, $parentStr) = unserialize($serialized); parent::unserialize($parentStr); } } 
<?php
 namespace Symfony\Component\Security\Core\Authorization\Voter; use Symfony\Component\Security\Core\Authentication\Token\TokenInterface; abstract class Voter implements VoterInterface { public function vote(TokenInterface $token, $subject, array $attributes) { $vote = self::ACCESS_ABSTAIN; foreach ($attributes as $attribute) { if (!$this->supports($attribute, $subject)) { continue; } $vote = self::ACCESS_DENIED; if ($this->voteOnAttribute($attribute, $subject, $token)) { return self::ACCESS_GRANTED; } } return $vote; } abstract protected function supports($attribute, $subject); abstract protected function voteOnAttribute($attribute, $subject, TokenInterface $token); } 